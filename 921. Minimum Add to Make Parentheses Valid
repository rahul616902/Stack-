class Solution {
public:
    int minAddToMakeValid(string s) {
        
        int count = 0;
        stack<char>st;

        for(int i=0; i<s.size();i++){
            if(s[i]=='('){
                st.push(s[i]);
            }
            else{
                // s[i] has closing brackets 
                // 1st case check if stack is empty or not because if empty then we simply increment count
                if(st.empty()){
                    count++;
                }else{
                    // means stack has a closing brackets corresponding to the opening brackets
                    st.pop();
                    
                }
            }
        }

        return (count + st.size());
    }
};
