class Solution {
public:
    bool isValid(string s) {
        
        stack<char>st;

        for(int i=0; i<s.length();i++){
            char ch = s[i];
        
       
       // opening  brackets--
        if(ch=='(' || ch=='{' || ch=='['){
            st.push(ch);
        }
        
        else{
        // closing brackets---

        // pair find karne ke liye check karenge ki stack empty to nhi hai n
        if(!st.empty()){

            char topch = st.top();
            
            if(ch==')' && topch == '('){
                st.pop();
            }else if(ch=='}' && topch=='{'){
                st.pop();
            }else if(ch==']' && topch=='['){
                st.pop();
            }else{
                
                // means brackets not matching
                return false;
            }
          }
        

        else{

            // stack empty hai aur open bracket ke liye koi close brackts nhi hai 
            return false;
        }
        
        }
        }
        
        
        // NOW jab loop se bahar aa gye means ki sare ch ek dusre ko cancel out kar diye means matching ho gyi hai
        
        if(st.empty()){
            return true;
        }
        else{
            return false;
        }
    }
};
